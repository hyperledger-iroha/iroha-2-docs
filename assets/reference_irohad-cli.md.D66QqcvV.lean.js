import{_ as e,c as i,a5 as s,o as t}from"./chunks/framework.Dedzf56s.js";const g=JSON.parse('{"title":"irohad CLI","description":"","frontmatter":{},"headers":[],"relativePath":"reference/irohad-cli.md","filePath":"reference/irohad-cli.md","lastUpdated":1761757106000}'),o={name:"reference/irohad-cli.md"};function l(n,a,r,c,h,p){return t(),i("div",null,a[0]||(a[0]=[s('<h1 id="irohad-cli" tabindex="-1"><code>irohad</code> CLI <a class="header-anchor" href="#irohad-cli" aria-label="Permalink to &quot;`irohad` CLI&quot;">​</a></h1><p>TODO</p><h2 id="arg-config" tabindex="-1"><code>--config</code> <a class="header-anchor" href="#arg-config" aria-label="Permalink to &quot;`--config`  {#arg-config}&quot;">​</a></h2><ul><li><strong>Type:</strong> File Path</li><li><strong>Alias:</strong> <code>-c</code></li></ul><p>Path to the <a href="/iroha-2-docs/reference/peer-config/">configuration</a> file.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">irohad</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/iroha.toml</span></span></code></pre></div><h2 id="arg-trace-config" tabindex="-1"><code>--trace-config</code> <a class="header-anchor" href="#arg-trace-config" aria-label="Permalink to &quot;`--trace-config` {#arg-trace-config}&quot;">​</a></h2><p>Enables trace logs of configuration reading and parsing. Might be useful for configuration troubleshooting.</p><ul><li><strong>Type:</strong> flag</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">irohad</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-config</span></span></code></pre></div><h2 id="arg-terminal-colors" tabindex="-1"><code>--terminal-colors</code> <a class="header-anchor" href="#arg-terminal-colors" aria-label="Permalink to &quot;`--terminal-colors` {#arg-terminal-colors}&quot;">​</a></h2><ul><li><strong>Type:</strong> Boolean, either <code>--terminal-colors=false</code> or <code>--terminal-colors=true</code></li><li><strong>Default:</strong> Auto-detect</li><li><strong>ENV:</strong> <code>TERMINAL_COLORS</code></li></ul><p>Whether to enable ANSI-colored output or not.</p><p>By default, Iroha determines whether the terminal supports colored output or not.</p><p>To explicitly disable colours:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iroha</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --terminal-colors=false</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or via env</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TERMINAL_COLORS=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iroha</span></span></code></pre></div>',16)]))}const k=e(o,[["render",l]]);export{g as __pageData,k as default};
