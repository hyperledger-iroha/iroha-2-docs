import{_ as a,c as s,a5 as e,o as t}from"./chunks/framework.Dedzf56s.js";const k=JSON.parse('{"title":"Working with Iroha Binaries","description":"","frontmatter":{},"headers":[],"relativePath":"reference/binaries.md","filePath":"reference/binaries.md","lastUpdated":1761757106000}'),l={name:"reference/binaries.md"};function h(n,i,r,o,p,d){return t(),s("div",null,i[0]||(i[0]=[e(`<h1 id="working-with-iroha-binaries" tabindex="-1">Working with Iroha Binaries <a class="header-anchor" href="#working-with-iroha-binaries" aria-label="Permalink to &quot;Working with Iroha Binaries&quot;">​</a></h1><p>Working with Iroha involves several different binaries (e.g., <code>iroha</code>). This is a reference of available binaries, and the methods of their installation.</p><p>Iroha 2 provides the following binary executables:</p><ul><li><p><a href="https://github.com/hyperledger-iroha/iroha/tree/main/crates/irohad" target="_blank" rel="noreferrer"><code>irohad</code></a> — the main Iroha CLI that is used to start a peer daemon.</p></li><li><p><a href="https://github.com/hyperledger-iroha/iroha/tree/main/crates/iroha" target="_blank" rel="noreferrer"><code>iroha</code></a> — Iroha Client CLI that is used to interact with an Iroha peer.</p></li><li><p><a href="https://github.com/hyperledger-iroha/iroha/tree/main/crates/iroha_kagami" target="_blank" rel="noreferrer"><code>kagami</code></a> — a tool that is used to generate and validate various types of data (e.g., cryptographic keys, genesis blocks, default client and peer configuration files).</p><blockquote><p>See also:</p><ul><li><a href="./../guide/security/generating-cryptographic-keys.html">Generating Cryptographic Keys</a> — instructions on how to generate cryptographic keys with <code>kagami</code>.</li><li><a href="./../guide/configure/genesis.html#generation">Configure Iroha &gt; Genesis Block: Generation</a> — instructions on how to generate a default genesis block with <code>kagami</code>.</li><li><a href="./../guide/configure/client-configuration.html#generation">Configure Iroha &gt; Client Configuration: Generation</a> — instructions on how to generate a default client configuration file with <code>kagami</code>.</li></ul></blockquote></li></ul><p>There are two main ways to work with Iroha 2 binaries:</p><ul><li><a href="#source">Using the source GitHub repository</a>: <ul><li><a href="#source-install">Installing from the GitHub source repository</a>.</li><li><a href="#source-run">Running from a cloned GitHub repository</a>.</li></ul></li><li><a href="#docker-install">Using the pre-built Docker images</a>.</li></ul><h2 id="source" tabindex="-1">Using the Source GitHub Repository <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Using the Source GitHub Repository {#source}&quot;">​</a></h2><p>To perform any of the actions using the GitHub repository (i.e., <a href="#source-install">building &amp; installing</a>, or <a href="#source-run">running</a> binaries), first install the <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noreferrer">Rust toolchain</a>.</p><h3 id="source-install" tabindex="-1">Installing from the GitHub Source Repository <a class="header-anchor" href="#source-install" aria-label="Permalink to &quot;Installing from the GitHub Source Repository {#source-install}&quot;">​</a></h3><p>You can install Iroha 2 binaries system-wide with the Rust <code>cargo</code> tool:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-AQghz" id="tab-VybvetN" checked><label data-title="irohad" for="tab-VybvetN">irohad</label><input type="radio" name="group-AQghz" id="tab-N_BlQv0"><label data-title="iroha" for="tab-N_BlQv0">iroha</label><input type="radio" name="group-AQghz" id="tab-F8bjh9d"><label data-title="kagami" for="tab-F8bjh9d">kagami</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hyperledger-iroha/iroha.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> irohad</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --locked</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">irohad</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hyperledger-iroha/iroha.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha_cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --locked</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iroha</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hyperledger-iroha/iroha.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha_kagami</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --locked</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kagami</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For more details on <code>cargo install</code> and its <code>[options]</code>, see <a href="https://doc.rust-lang.org/cargo/commands/cargo-install.html" target="_blank" rel="noreferrer">The Cargo Book &gt; cargo-install(1)</a>.</p></div><h3 id="source-run" tabindex="-1">Running from a Cloned GitHub Repository <a class="header-anchor" href="#source-run" aria-label="Permalink to &quot;Running from a Cloned GitHub Repository {#source-run}&quot;">​</a></h3><p>You may want to run the binaries without installing them system-wide. This will involve cloning Iroha&#39;s source code and using <code>cargo run</code>.</p><p>First, clone the <a href="https://github.com/hyperledger-iroha/iroha.git" target="_blank" rel="noreferrer">hyperledger-iroha/iroha</a> GitHub repository:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hyperledger-iroha/iroha.git</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clone-folde</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clone-folde</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>To run an Iroha 2 binary with <code>cargo install</code>, execute one of the following commands in your terminal:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-6otLh" id="tab-U6mIbKV" checked><label data-title="irohad" for="tab-U6mIbKV">irohad</label><input type="radio" name="group-6otLh" id="tab-N419XkG"><label data-title="iroha" for="tab-N419XkG">iroha</label><input type="radio" name="group-6otLh" id="tab-d8e6h6k"><label data-title="kagami" for="tab-d8e6h6k">kagami</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> irohad</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kagami</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For more details on <code>cargo run</code> and its <code>[options]</code>, see <a href="https://doc.rust-lang.org/cargo/commands/cargo-run.html" target="_blank" rel="noreferrer">The Cargo Book &gt; cargo-run(1)</a>.</p></div><h2 id="docker-install" tabindex="-1">Using the Pre-Built Docker Images <a class="header-anchor" href="#docker-install" aria-label="Permalink to &quot;Using the Pre-Built Docker Images {#docker-install}&quot;">​</a></h2><p>First, install <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">Docker</a>.</p><p>Then, to install a binary from a pre-built Docker image, execute one of the following commands:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-OjsWB" id="tab-fja93py" checked><label data-title="iroha" for="tab-fja93py">iroha</label><input type="radio" name="group-OjsWB" id="tab-nbx4UK6"><label data-title="kagami" for="tab-nbx4UK6">kagami</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hyperledger/iroha:dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hyperledger/iroha:dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kagami</span></span></code></pre></div></div></div><p>For most tasks <code>iroha</code> binary requires:</p><ul><li>a config file that needs to be mapped to the container</li><li>access to the host machine&#39;s network connection</li></ul><p>Below is an example of how to launch <code>iroha</code> with a your custom config and network access.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/host/config:/config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hyperledger/iroha:dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /config/custom-client-config.toml</span></span></code></pre></div><p>where:</p><p><code>custom-client-config.toml</code> - is the name of your customs config file</p><p><code>/path/to/host/config</code> - is the location of your custom config on your host machine</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>irohad</code> should be started using <code>docker compose</code>. Please refer to the sample configuration in the <a href="https://github.com/hyperledger-iroha/iroha/blob/main/defaults/docker-compose.yml" target="_blank" rel="noreferrer">Iroha 2 repository</a>.</p></div>`,31)]))}const g=a(l,[["render",h]]);export{k as __pageData,g as default};
